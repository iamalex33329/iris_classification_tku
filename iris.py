# -*- coding: utf-8 -*-
"""iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Kz8r5s6AWHqWsfzdNJvfPS9dldXuqe7p
"""

from sklearn.datasets import load_iris
iris = load_iris()

import pandas as pd

df = pd.DataFrame(iris["data"], columns=iris['feature_names'])
df['target'] = iris['target']

df.corr()

import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(12,8))
sns.heatmap(df.astype("float").corr(), cmap="summer", annot=True)

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(df.drop(["target"], axis=1), df["target"], test_size=0.1)
# print(x_train, x_test, y_train, y_test)

from sklearn.tree import DecisionTreeClassifier

clf = DecisionTreeClassifier()
clf.fit(x_train, y_train)

from sklearn.tree import export_graphviz
import graphviz

g = export_graphviz(clf, out_file=None, feature_names=iris["feature_names"], class_names=iris["target_names"], 
                    filled=True, special_characters=True)

graph = graphviz.Source(g)
graph

pre = clf.predict(x_test)
print("target:", list(y_test))
print("預測結果:", list(pre))

from sklearn.metrics import accuracy_score

rate = accuracy_score(pre, y_test)
print("分類準確率:", rate)

from sklearn.metrics import confusion_matrix

cm = confusion_matrix(y_test, pre)
pd.DataFrame(cm)